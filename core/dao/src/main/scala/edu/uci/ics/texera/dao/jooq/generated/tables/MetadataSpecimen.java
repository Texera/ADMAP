/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables;


import edu.uci.ics.texera.dao.jooq.generated.Keys;
import edu.uci.ics.texera.dao.jooq.generated.TexeraDb;
import edu.uci.ics.texera.dao.jooq.generated.enums.SpecimenSexEnum;
import edu.uci.ics.texera.dao.jooq.generated.enums.SpecimenSpeciesEnum;
import edu.uci.ics.texera.dao.jooq.generated.tables.records.MetadataSpecimenRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MetadataSpecimen extends TableImpl<MetadataSpecimenRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>texera_db.metadata_specimen</code>
     */
    public static final MetadataSpecimen METADATA_SPECIMEN = new MetadataSpecimen();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MetadataSpecimenRecord> getRecordType() {
        return MetadataSpecimenRecord.class;
    }

    /**
     * The column <code>texera_db.metadata_specimen.sid</code>.
     */
    public final TableField<MetadataSpecimenRecord, Integer> SID = createField(DSL.name("sid"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>texera_db.metadata_specimen.metadata_id</code>.
     */
    public final TableField<MetadataSpecimenRecord, Integer> METADATA_ID = createField(DSL.name("metadata_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>texera_db.metadata_specimen.id</code>.
     */
    public final TableField<MetadataSpecimenRecord, String> ID = createField(DSL.name("id"), SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>texera_db.metadata_specimen.species</code>.
     */
    public final TableField<MetadataSpecimenRecord, SpecimenSpeciesEnum> SPECIES = createField(DSL.name("species"), SQLDataType.VARCHAR.nullable(false).asEnumDataType(edu.uci.ics.texera.dao.jooq.generated.enums.SpecimenSpeciesEnum.class), this, "");

    /**
     * The column <code>texera_db.metadata_specimen.species_other</code>.
     */
    public final TableField<MetadataSpecimenRecord, String> SPECIES_OTHER = createField(DSL.name("species_other"), SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>texera_db.metadata_specimen.age_value</code>.
     */
    public final TableField<MetadataSpecimenRecord, Integer> AGE_VALUE = createField(DSL.name("age_value"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>texera_db.metadata_specimen.age_unit</code>.
     */
    public final TableField<MetadataSpecimenRecord, String> AGE_UNIT = createField(DSL.name("age_unit"), SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>texera_db.metadata_specimen.sex</code>.
     */
    public final TableField<MetadataSpecimenRecord, SpecimenSexEnum> SEX = createField(DSL.name("sex"), SQLDataType.VARCHAR.asEnumDataType(edu.uci.ics.texera.dao.jooq.generated.enums.SpecimenSexEnum.class), this, "");

    /**
     * The column <code>texera_db.metadata_specimen.notes</code>.
     */
    public final TableField<MetadataSpecimenRecord, String> NOTES = createField(DSL.name("notes"), SQLDataType.CLOB, this, "");

    private MetadataSpecimen(Name alias, Table<MetadataSpecimenRecord> aliased) {
        this(alias, aliased, null);
    }

    private MetadataSpecimen(Name alias, Table<MetadataSpecimenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>texera_db.metadata_specimen</code> table
     * reference
     */
    public MetadataSpecimen(String alias) {
        this(DSL.name(alias), METADATA_SPECIMEN);
    }

    /**
     * Create an aliased <code>texera_db.metadata_specimen</code> table
     * reference
     */
    public MetadataSpecimen(Name alias) {
        this(alias, METADATA_SPECIMEN);
    }

    /**
     * Create a <code>texera_db.metadata_specimen</code> table reference
     */
    public MetadataSpecimen() {
        this(DSL.name("metadata_specimen"), null);
    }

    public <O extends Record> MetadataSpecimen(Table<O> child, ForeignKey<O, MetadataSpecimenRecord> key) {
        super(child, key, METADATA_SPECIMEN);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : TexeraDb.TEXERA_DB;
    }

    @Override
    public Identity<MetadataSpecimenRecord, Integer> getIdentity() {
        return (Identity<MetadataSpecimenRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<MetadataSpecimenRecord> getPrimaryKey() {
        return Keys.METADATA_SPECIMEN_PKEY;
    }

    @Override
    public List<ForeignKey<MetadataSpecimenRecord, ?>> getReferences() {
        return Arrays.asList(Keys.METADATA_SPECIMEN__METADATA_SPECIMEN_METADATA_ID_FKEY);
    }

    private transient Dataset _dataset;

    /**
     * Get the implicit join path to the <code>texera_db.dataset</code> table.
     */
    public Dataset dataset() {
        if (_dataset == null)
            _dataset = new Dataset(this, Keys.METADATA_SPECIMEN__METADATA_SPECIMEN_METADATA_ID_FKEY);

        return _dataset;
    }

    @Override
    public MetadataSpecimen as(String alias) {
        return new MetadataSpecimen(DSL.name(alias), this);
    }

    @Override
    public MetadataSpecimen as(Name alias) {
        return new MetadataSpecimen(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MetadataSpecimen rename(String name) {
        return new MetadataSpecimen(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MetadataSpecimen rename(Name name) {
        return new MetadataSpecimen(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, SpecimenSpeciesEnum, String, Integer, String, SpecimenSexEnum, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
