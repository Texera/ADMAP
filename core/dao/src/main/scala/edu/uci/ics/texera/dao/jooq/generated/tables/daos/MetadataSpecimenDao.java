/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables.daos;


import edu.uci.ics.texera.dao.jooq.generated.enums.SpecimenSexEnum;
import edu.uci.ics.texera.dao.jooq.generated.enums.SpecimenSpeciesEnum;
import edu.uci.ics.texera.dao.jooq.generated.tables.MetadataSpecimen;
import edu.uci.ics.texera.dao.jooq.generated.tables.records.MetadataSpecimenRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MetadataSpecimenDao extends DAOImpl<MetadataSpecimenRecord, edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen, Integer> {

    /**
     * Create a new MetadataSpecimenDao without any configuration
     */
    public MetadataSpecimenDao() {
        super(MetadataSpecimen.METADATA_SPECIMEN, edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen.class);
    }

    /**
     * Create a new MetadataSpecimenDao with an attached configuration
     */
    public MetadataSpecimenDao(Configuration configuration) {
        super(MetadataSpecimen.METADATA_SPECIMEN, edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen.class, configuration);
    }

    @Override
    public Integer getId(edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen object) {
        return object.getSid();
    }

    /**
     * Fetch records that have <code>sid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchRangeOfSid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MetadataSpecimen.METADATA_SPECIMEN.SID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sid IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchBySid(Integer... values) {
        return fetch(MetadataSpecimen.METADATA_SPECIMEN.SID, values);
    }

    /**
     * Fetch a unique record that has <code>sid = value</code>
     */
    public edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen fetchOneBySid(Integer value) {
        return fetchOne(MetadataSpecimen.METADATA_SPECIMEN.SID, value);
    }

    /**
     * Fetch a unique record that has <code>sid = value</code>
     */
    public Optional<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchOptionalBySid(Integer value) {
        return fetchOptional(MetadataSpecimen.METADATA_SPECIMEN.SID, value);
    }

    /**
     * Fetch records that have <code>metadata_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchRangeOfMetadataId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MetadataSpecimen.METADATA_SPECIMEN.METADATA_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>metadata_id IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchByMetadataId(Integer... values) {
        return fetch(MetadataSpecimen.METADATA_SPECIMEN.METADATA_ID, values);
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(MetadataSpecimen.METADATA_SPECIMEN.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchById(String... values) {
        return fetch(MetadataSpecimen.METADATA_SPECIMEN.ID, values);
    }

    /**
     * Fetch records that have <code>species BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchRangeOfSpecies(SpecimenSpeciesEnum lowerInclusive, SpecimenSpeciesEnum upperInclusive) {
        return fetchRange(MetadataSpecimen.METADATA_SPECIMEN.SPECIES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>species IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchBySpecies(SpecimenSpeciesEnum... values) {
        return fetch(MetadataSpecimen.METADATA_SPECIMEN.SPECIES, values);
    }

    /**
     * Fetch records that have <code>species_other BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchRangeOfSpeciesOther(String lowerInclusive, String upperInclusive) {
        return fetchRange(MetadataSpecimen.METADATA_SPECIMEN.SPECIES_OTHER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>species_other IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchBySpeciesOther(String... values) {
        return fetch(MetadataSpecimen.METADATA_SPECIMEN.SPECIES_OTHER, values);
    }

    /**
     * Fetch records that have <code>age_value BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchRangeOfAgeValue(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MetadataSpecimen.METADATA_SPECIMEN.AGE_VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>age_value IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchByAgeValue(Integer... values) {
        return fetch(MetadataSpecimen.METADATA_SPECIMEN.AGE_VALUE, values);
    }

    /**
     * Fetch records that have <code>age_unit BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchRangeOfAgeUnit(String lowerInclusive, String upperInclusive) {
        return fetchRange(MetadataSpecimen.METADATA_SPECIMEN.AGE_UNIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>age_unit IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchByAgeUnit(String... values) {
        return fetch(MetadataSpecimen.METADATA_SPECIMEN.AGE_UNIT, values);
    }

    /**
     * Fetch records that have <code>sex BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchRangeOfSex(SpecimenSexEnum lowerInclusive, SpecimenSexEnum upperInclusive) {
        return fetchRange(MetadataSpecimen.METADATA_SPECIMEN.SEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sex IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchBySex(SpecimenSexEnum... values) {
        return fetch(MetadataSpecimen.METADATA_SPECIMEN.SEX, values);
    }

    /**
     * Fetch records that have <code>notes BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchRangeOfNotes(String lowerInclusive, String upperInclusive) {
        return fetchRange(MetadataSpecimen.METADATA_SPECIMEN.NOTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>notes IN (values)</code>
     */
    public List<edu.uci.ics.texera.dao.jooq.generated.tables.pojos.MetadataSpecimen> fetchByNotes(String... values) {
        return fetch(MetadataSpecimen.METADATA_SPECIMEN.NOTES, values);
    }
}
